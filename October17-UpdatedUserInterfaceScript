t = t or 0
t = t + framedelta()

if not init then
	score = 0
end

function dist(x1,z1,x2,z2)
	return math.sqrt((x2-x1)^2 + (z2-z1)^2)	
end

function boom(i) 
	broadcast("BOOM","Position",unpack(obj[i]:getposition()))
	obj[i]:destroy()
	table.remove(obj,i)
	score = score + dist(obj_xz[1],obj_xz[3],0,0)
end

j = inputs.get("ObjectNumber")
g = inputs.get("ObjectSize")

obj = obj or {}
if not init then 
	colors = {"Green"}
	for i = 1,j do
		local color = colors[math.random(1, #colors)]
		table.insert(obj, object.create("Sphere",color,"White Sphere"))
  		--node.setposition (obj[i], math.random(-1000, 1000)/100, 0, math.random(-1000,1000)/100)
		obj[i]:setposition(math.random(-40,40)/100, 0, math.random(-80,80)/100)
		--obj[i]:setposition((i/3), 0, i/3-.5)
		--obj[i]:setposition(math.random(-15,15)/100, 0, math.random(-15,15)/100)
		obj[i]:setscaling(g,g,g)
	end
	init = true
end

x = inputs.get("PosX")  
z = inputs.get("PosZ")
i=1


while i <= #obj do
	obj_xz = obj[i]:getposition()
	dists = dist(x,z,obj_xz[1],obj_xz[3])
	--dists = dist(x,0,obj_xz[1],0)
	--dists = dist(0,z,0,obj_xz[3])
	--print(obj_xz[3])
	print(score)
	outputs.set("score",score)
   if dists < 0.05 then
		boom(i)
	end
i = i + 1
end
